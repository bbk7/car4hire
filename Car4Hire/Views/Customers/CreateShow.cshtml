@model Car4Hire.Models.Customer

@{
    ViewBag.Title = "Create";
}

<h4>Car 4 Hire</h4>
@Html.ValidationSummary()
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h1>Customer</h1>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <p class="pC">First Name</p>
            @*@Html.LabelFor(model => model.f_name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.f_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.f_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pC">Last Name</p>
            @*@Html.LabelFor(model => model.l_name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.l_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.l_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pC">Address</p>
            @*@Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <p class="pC">City</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <p class="pC">Email</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <p class="pC">Phone No</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="pC">Select Your Car</p>
            @*@Html.LabelFor(model => model.carId, "Car", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.DropDownList("carId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.carId, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="btn mibtn">
            <input type="submit" value="Confirm" @*class="btn btn-default, mibtn"*@ />
        </div>

        <div class="btn btn-default mibtn">
            @Html.ActionLink("Back", "Show", "Cars")
        </div>


        @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Confirm" class="btn btn-default, mibtn" />
                </div>
            </div>*@
    </div>
}

@*<div class="mibtn">
        @Html.ActionLink("Show", "Show", "Cars")
    </div>*@


<style>
    h4 {
        font-family: 'Amatic SC', cursive;
        font-size: 5em;
        text-align: center;
        margin: 2px;
        padding-top: 40px;
    }

    h1 {
        font-family: 'IBM Plex Sans', sans-serif;
    }

    .pC {
        font-size: 1.5em;
        padding-left: 15px;
        font-family: 'IBM Plex Sans', sans-serif;
    }

    .mibtn {
        font-size: 1.5em;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
